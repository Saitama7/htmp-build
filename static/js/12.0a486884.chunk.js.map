{"version":3,"sources":["layouts/Main/styles.js","layouts/Main/index.js","common/helpers.js","services/auth/constants.js","services/auth/actions.js","services/auth/state.js"],"names":["useStyles","makeStyles","theme","root","width","height","display","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","user","border","background","margin","marginBottom","borderRadius","nav","textDecoration","color","fontSize","fontWeight","activeLink","palette","primary","main","memo","props","classes","children","useSelector","authSelectors","getAuthUser","userInfo","useMemo","info","photo","email","organization","name","className","Drawer","variant","paper","Toolbar","ListItem","ListItemAvatar","Avatar","src","ListItemText","secondary","List","routes","filter","route","sidebar","map","to","path","key","activeClassName","button","ListItemIcon","alt","icon","boolReducer","truthyActions","falsyActions","initialState","handleActions","defaultSuffixes","createRequestAction","type","payloadFormatters","suffixes","Error","hasFormatters","length","reduce","acc","suffix","idx","undefined","getResponseError","e","response","data","statusText","ENDPOINTS","actionCreators","createActions","actions","login","dispatch","getState","a","api","loginRequest","post","res","setTokenToCookies","access","setRefreshTokenToCookies","refresh","loginSuccess","error","loginFail","Promise","reject","isAuthorizing","combineActions","authSuccessAction","authFailedAction","state","payload","token","rest","isAuthenticated","reducer","combineReducers","getAuthStatus","auth","getAuthError"],"mappings":"gRAIaA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CAC5CC,KAAM,CACJC,MAAO,OACPC,OAAQ,OACRC,QAAS,QAEXC,OAAQ,CACNH,MATgB,IAUhBI,WAAY,GAEdC,YAAa,CACXL,MAbgB,KAelBM,gBAAiB,CACfC,SAAU,QAEZC,QAAS,CACPC,SAAU,EACVC,QAASZ,EAAMa,QAAQ,IAEzBC,KAAM,CACJZ,MAAO,IACPa,OAAQ,oBACRC,WAAY,UACZC,OAAQ,YACRC,aAAc,EACdC,aAAc,IAEhBC,IAAK,CACHC,eAAgB,OAChBC,MAAO,UACPC,SAAU,GACVC,WAAY,QAEdC,WAAY,CACVH,MAAOtB,EAAM0B,QAAQC,QAAQC,UCqDlBC,0BAxEf,SAAoBC,GAClB,IAAMC,EAAUjC,IAERkC,EAAaF,EAAbE,SAEFlB,EAAOmB,YAAYC,IAAcC,aAEjCC,EAAWC,mBAAQ,WACvB,OAAIvB,GAAQA,EAAKwB,KACRxB,EAAKwB,KAGP,CACLC,MAAO,KACPC,MAAO,GACPC,aAAc,CACZC,KAAM,kBAGT,CAAC5B,IAEJ,OACE,yBAAK6B,UAAWZ,EAAQ9B,MACtB,kBAAC2C,EAAA,EAAD,CACED,UAAWZ,EAAQ1B,OACnBwC,QAAQ,YACRd,QAAS,CACPe,MAAOf,EAAQxB,cAGjB,kBAACwC,EAAA,EAAD,MACA,yBAAKJ,UAAWZ,EAAQvB,iBACtB,kBAACwC,EAAA,EAAD,CAAUL,UAAWZ,EAAQjB,MAC3B,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,IAAKf,EAASG,SAExB,kBAACa,EAAA,EAAD,CACEzB,QAASS,EAASI,MAClBa,UAAWjB,EAASK,aAAeL,EAASK,aAAaC,KAAO,iBAGpE,kBAACY,EAAA,EAAD,KACGC,IAAOC,QAAO,SAAAC,GAAK,OAAIA,EAAMC,WAASC,KAAI,SAAAF,GAAK,OAC9C,kBAAC,IAAD,CACEG,GAAIH,EAAMI,KACVC,IAAKL,EAAMI,KACXlB,UAAWZ,EAAQX,IACnB2C,gBAAiBhC,EAAQN,YAEzB,kBAACuB,EAAA,EAAD,CAAUgB,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,yBAAKC,IAAKT,EAAMf,KAAMS,IAAKM,EAAMU,KAAMjE,MAAM,KAAKC,OAAO,QAE3D,kBAACiD,EAAA,EAAD,CAAczB,QAAS8B,EAAMf,eAOzC,0BAAMC,UAAWZ,EAAQrB,SACvB,kBAACqC,EAAA,EAAD,MACCf,Q,2KCzEIoC,EAAc,SACzBC,EACAC,GAFyB,MAGzBC,EAHyB,+DAItBC,aAAa,mBAEbH,GAAgB,kBAAM,KAFT,cAGbC,GAAe,kBAAM,KAHR,GAKhBC,IAGIE,EAAkB,CAAC,UAAW,UAAW,QASxC,SAASC,EACdC,GAGC,IAFDC,EAEA,uDAFoB,GACpBC,EACA,uDADWJ,EAEX,IAAKE,GAAwB,kBAATA,EAClB,MAAM,IAAIG,MAAM,6BAElB,IAAMC,EAAgBH,GAAqBA,EAAkBI,OAAS,EAEtE,OAAOH,EAASI,QACd,SAACC,EAAKC,EAAQC,GAAd,sBACKF,EADL,yBAEMP,EAFN,YAEcQ,GAAWJ,EAAgBH,EAAkBQ,QAAOC,MAElE,IASG,SAASC,IAA0B,IAATC,EAAQ,uDAAJ,GAC3BC,EAAaD,EAAbC,SAER,OAAOA,EAAWA,EAASC,MAAQD,EAASE,WAAa,kB,wMCzD9CC,EACJ,aCQHC,EAAiBC,YAAc,eAChCnB,YAAoB,WAuBlB,I,EAAMoB,EAAO,eACfF,EADe,CAElBG,MAtBK,SAAeN,GACpB,8CAAO,WAAOO,EAAUC,EAAjB,sBAAAC,EAAA,6DAA6BC,EAA7B,EAA6BA,IAClCH,EAASJ,EAAeQ,gBADnB,kBAIeD,EAAIE,KAAKV,EAAiBF,GAJzC,cAIGa,EAJH,OAKHC,YAAkBD,EAAIb,KAAKe,QAC3BC,YAAyBH,EAAIb,KAAKiB,SAElCV,EAASJ,EAAee,aAAaL,EAAIb,OARtC,kBAUIa,GAVJ,yCAYGM,EAAQtB,YAAiB,EAAD,IAC9BU,EAASJ,EAAeiB,UAAUD,GAAK,OAbpC,kBAcIE,QAAQC,OAAOH,IAdnB,0DAAP,6D,0CCHWI,EAAgB5C,YAC3B,CACE6C,YACEnB,EAAQM,eAGZ,CACEa,YACEnB,EAAQa,aACRb,EAAQe,aAKRK,EAAoBD,YACxBnB,EAAQa,cAGJQ,EAAmBF,YACvBnB,EAAQe,WAmBGpB,EAAOjB,aAAa,mBAE5B0C,GAlBiB,SAACE,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAEpBC,EACND,EADFb,OAAeE,EACbW,EADaX,QAAepE,EAC5B+E,EADsBvG,KAAeyG,EAFG,YAGxCF,EAHwC,6BAK5C,OAAO,eACFD,EADL,CAEEI,iBAAiB,EACjB1G,KAAK,aACHwG,QACAZ,UACApE,QACGiF,QAIwB,cAG5BJ,GAAmB,SAACC,EAAD,OAAUC,EAAV,EAAUA,QAAV,sBACfD,EADe,CAElBI,iBAAiB,EACjB1G,KAAM,KACN8F,MAAOS,GAAW,UAPS,GA5CL,CAC1BG,iBAAiB,EACjB1G,KAAM,KACN8F,MAAO,OAsDIa,EAAUC,YAAgB,CACrCjC,OACAuB,kBAGW9E,EAAgB,CAC3ByF,cAAe,SAAAP,GAAK,QAAIA,EAAMQ,MAAOR,EAAMQ,KAAKnC,KAAK+B,iBACrDK,aAAc,SAAAT,GAAK,OAAKA,EAAMQ,KAAOR,EAAMQ,KAAKnC,KAAKmB,MAAQ,MAC7DzE,YAAa,SAAAiF,GAAK,OAAKA,EAAMQ,KAAOR,EAAMQ,KAAKnC,KAAK3E,KAAO","file":"static/js/12.0a486884.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/styles'\n\nconst drawerWidth = 250\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    display: 'flex'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerContainer: {\n    overflow: 'auto'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  user: {\n    width: 230,\n    border: '1px solid #E2E2EA',\n    background: '#FAFAFB',\n    margin: '30px auto',\n    marginBottom: 0,\n    borderRadius: 15\n  },\n  nav: {\n    textDecoration: 'none',\n    color: '#141414',\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  activeLink: {\n    color: theme.palette.primary.main\n  }\n}))\n","import React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\n\nimport { useSelector } from 'react-redux'\n\nimport { authSelectors } from '@services/auth'\n\nimport Drawer from '@material-ui/core/Drawer'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport { routes } from '@/routes'\nimport { useStyles } from './styles'\n\nfunction MainLayout(props) {\n  const classes = useStyles()\n\n  const { children } = props\n\n  const user = useSelector(authSelectors.getAuthUser)\n\n  const userInfo = useMemo(() => {\n    if (user && user.info) {\n      return user.info\n    }\n\n    return {\n      photo: null,\n      email: '',\n      organization: {\n        name: 'Mobird Inc.'\n      }\n    }\n  }, [user])\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <ListItem className={classes.user}>\n            <ListItemAvatar>\n              <Avatar src={userInfo.photo} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={userInfo.email}\n              secondary={userInfo.organization ? userInfo.organization.name : 'Mobird Inc.'}\n            />\n          </ListItem>\n          <List>\n            {routes.filter(route => route.sidebar).map(route => (\n              <NavLink\n                to={route.path}\n                key={route.path}\n                className={classes.nav}\n                activeClassName={classes.activeLink}\n              >\n                <ListItem button>\n                  <ListItemIcon>\n                    <img alt={route.name} src={route.icon} width=\"20\" height=\"20\" />\n                  </ListItemIcon>\n                  <ListItemText primary={route.name} />\n                </ListItem>\n              </NavLink>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        {children}\n      </main>\n    </div>\n  )\n}\n\nMainLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default memo(MainLayout)\n","import { handleActions } from 'redux-actions'\n\n/**\n * Handle actions that will return a boolean value\n * @param {Function[]} truthyActions\n * @param {Function[]} falsyActions\n * @param {Boolean=false} initialState\n * @return {*}\n */\nexport const boolReducer = (\n  truthyActions,\n  falsyActions,\n  initialState = false\n) => handleActions(\n  {\n    [truthyActions]: () => true,\n    [falsyActions]: () => false\n  },\n  initialState\n)\n\nconst defaultSuffixes = ['REQUEST', 'SUCCESS', 'FAIL']\n\n/**\n * Creates an object with an action types as keys, enhanced with suffixes. Default suffixes are 'REQUEST', 'SUCCESS', 'FAILURE'.\n * @param {String} type Action type in upper snake case\n * @param {Function[]} payloadFormatters Array of formatters. Order: pending, success, failure\n * @param {String[]} suffixes Array of suffixes that will append to type\n * @return {string|{[p: string]: *}}\n */\nexport function createRequestAction(\n  type,\n  payloadFormatters = [],\n  suffixes = defaultSuffixes\n) {\n  if (!type || typeof type !== 'string') {\n    throw new Error('type argument is required')\n  }\n  const hasFormatters = payloadFormatters && payloadFormatters.length > 0\n\n  return suffixes.reduce(\n    (acc, suffix, idx) => ({\n      ...acc,\n      [`${type}_${suffix}`]: hasFormatters ? payloadFormatters[idx] : undefined\n    }),\n    {}\n  )\n}\n\n/**\n *\n * @param {*} e Error object. Might be an Error instance or plain object\n * @returns {string} A string\n */\nexport function getResponseError(e = {}) {\n  const { response } = e\n\n  return response ? response.data || response.statusText : 'network error'\n}\n\n/**\n * @param {String} key Key to set/get something to localStorage\n * @param {Any} item Value to set/get to localStorage\n */\nexport const setLocal = (key, item) => localStorage.setItem(key, JSON.stringify(item))\nexport const getLocal = key => JSON.parse(localStorage.getItem(key) || null)\nexport const delLocal = key => localStorage.removeItem(key)\n\n/**\n * Returns object key = el.id value = index\n * @param {Array} arr\n * @returns {Object}\n */\nexport const idMapping = arr => arr.reduce((acc, el, i) => {\n  acc[el.id] = i\n  return acc\n}, {})\n\n/**\n *\n * @param {Array} arr\n * @return {Object} tree\n */\nexport const makeTree = arr => {\n  const tree = {}\n\n  const arrMap = idMapping(arr)\n\n  arr.forEach(el => {\n    if (el.parent === null || el.parent === 1) {\n      tree[el.id] = el\n      return\n    }\n    const parentEl = arr[arrMap[el.parent]]\n    parentEl.children = [...(parentEl.children || []), el]\n  })\n\n  return tree\n}\n\n/**\n *\n * @param {String} phoneNumberString\n * @returns {String} formatted phone number\n */\nexport function formatPhoneNumber(phoneNumberString) {\n  const cleaned = `${phoneNumberString}`.replace(/\\D/g, '')\n  const match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/)\n  if (match) {\n    const intlCode = match[1] ? '+1 ' : ''\n    return [intlCode, '(', match[2], ') ', match[3], '-', match[4]].join('')\n  }\n  return null\n}\n","export const ENDPOINTS = {\n  LOGIN: '/v1/login/'\n}\n","import { createActions } from 'redux-actions'\n\nimport { createRequestAction, getResponseError } from '@common/helpers'\nimport {\n  setTokenToCookies,\n  setRefreshTokenToCookies\n} from '@utils/cookies'\nimport { ENDPOINTS } from './constants'\n\nconst actionCreators = createActions({\n  ...createRequestAction('LOGIN')\n})\n\nexport function login(data) {\n  return async (dispatch, getState, { api }) => {\n    dispatch(actionCreators.loginRequest())\n\n    try {\n      const res = await api.post(ENDPOINTS.LOGIN, data)\n      setTokenToCookies(res.data.access)\n      setRefreshTokenToCookies(res.data.refresh)\n\n      dispatch(actionCreators.loginSuccess(res.data))\n\n      return res\n    } catch (e) {\n      const error = getResponseError(e)\n      dispatch(actionCreators.loginFail(error || e))\n      return Promise.reject(error)\n    }\n  }\n}\n\nexport const actions = {\n  ...actionCreators,\n  login\n}\n","import { combineActions, handleActions } from 'redux-actions'\nimport { combineReducers } from 'redux'\nimport { boolReducer } from '@common/helpers'\nimport { actions } from './actions'\n\nexport const initialState = {\n  isAuthenticated: false,\n  user: null,\n  error: null\n}\n\nexport const isAuthorizing = boolReducer(\n  [\n    combineActions(\n      actions.loginRequest\n    )\n  ],\n  [\n    combineActions(\n      actions.loginSuccess,\n      actions.loginFail\n    )\n  ]\n)\n\nconst authSuccessAction = combineActions(\n  actions.loginSuccess\n)\n\nconst authFailedAction = combineActions(\n  actions.loginFail\n)\n\nconst handleSuccess = (state, { payload }) => {\n  const {\n    access: token, refresh, user: info, ...rest\n  } = payload\n\n  return {\n    ...state,\n    isAuthenticated: true,\n    user: {\n      token,\n      refresh,\n      info,\n      ...rest\n    }\n  }\n}\nexport const data = handleActions(\n  {\n    [authSuccessAction]: handleSuccess,\n    [authFailedAction]: (state, { payload }) => ({\n      ...state,\n      isAuthenticated: false,\n      user: null,\n      error: payload || null\n    })\n  },\n  initialState\n)\n\nexport const reducer = combineReducers({\n  data,\n  isAuthorizing\n})\n\nexport const authSelectors = {\n  getAuthStatus: state => state.auth ? state.auth.data.isAuthenticated : false,\n  getAuthError: state => (state.auth ? state.auth.data.error : null),\n  getAuthUser: state => (state.auth ? state.auth.data.user : null)\n}\n"],"sourceRoot":""}